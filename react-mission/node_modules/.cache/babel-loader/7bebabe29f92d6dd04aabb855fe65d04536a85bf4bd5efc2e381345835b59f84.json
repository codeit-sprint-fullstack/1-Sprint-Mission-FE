{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nfunction useAsync(asyncFunc) {\n  _s();\n  const [lodingError, setLodingError] = useState(null);\n  const [lodingErrorTag, setLodingErrorTag] = useState(false);\n  const wrappedFunction = async (...agrs) => {\n    try {\n      setLodingError(null);\n      setLodingErrorTag(false);\n      const result = await asyncFunc(...agrs);\n    } catch (e) {\n      setLodingError(e);\n      setLodingErrorTag(true);\n      return;\n    }\n  };\n  return [lodingError, lodingErrorTag, wrappedFunction];\n}\n_s(useAsync, \"zSoMAPwQJ2q+/kgUEmKnK+HxCZ4=\");\nexport default useAsync;","map":{"version":3,"names":["useState","useAsync","asyncFunc","_s","lodingError","setLodingError","lodingErrorTag","setLodingErrorTag","wrappedFunction","agrs","result","e"],"sources":["/root/1-Sprint-Mission-FE/react-mission/src/components/hook/useAsync.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction useAsync (asyncFunc) {\n    const [lodingError, setLodingError] = useState(null);\n    const [lodingErrorTag, setLodingErrorTag] = useState(false);\n\n    const wrappedFunction = async (...agrs) => {\n        try {\n            setLodingError(null);\n            setLodingErrorTag(false);\n            const result = await asyncFunc(...agrs);\n        } catch (e) {\n            setLodingError(e);\n            setLodingErrorTag(true);\n            return;\n        }\n    };\n    \n    return [lodingError, lodingErrorTag, wrappedFunction]\n}\n\nexport default useAsync"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,QAAQA,CAAEC,SAAS,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMQ,eAAe,GAAG,MAAAA,CAAO,GAAGC,IAAI,KAAK;IACvC,IAAI;MACAJ,cAAc,CAAC,IAAI,CAAC;MACpBE,iBAAiB,CAAC,KAAK,CAAC;MACxB,MAAMG,MAAM,GAAG,MAAMR,SAAS,CAAC,GAAGO,IAAI,CAAC;IAC3C,CAAC,CAAC,OAAOE,CAAC,EAAE;MACRN,cAAc,CAACM,CAAC,CAAC;MACjBJ,iBAAiB,CAAC,IAAI,CAAC;MACvB;IACJ;EACJ,CAAC;EAED,OAAO,CAACH,WAAW,EAAEE,cAAc,EAAEE,eAAe,CAAC;AACzD;AAACL,EAAA,CAjBQF,QAAQ;AAmBjB,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}